syntax = "proto3";
package BookStore;
option go_package = "BookStore_client/pb";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

service Bookstore {
  // 返回书店中所有书架列表
  rpc ListShelves(google.protobuf.Empty) returns (ListShelvesResponse) {
    // 定义HTTP映射
    // 假设服务域名为domain_name
    // curl http://domain_name/v1/shelves
    option (google.api.http) = {get:"/v1/shelves" };
  }
  // 在书店中创建新的书架
  rpc CreateShelf(CreateShelfRequest) returns (Shelf) {
    // curl -d '{"theme":"Music"}' http://domain_name/v1/shelves
    option (google.api.http) = {
      post:"/v1/shelves"
      body:"shelf"
    };
  }
  //返回书店中指定的书架
  rpc GetShelf(GetShelfRequest) returns (Shelf) {
    // curl http://domain_name/v1/shelves/1
    option (google.api.http) = {get:"/v1/shelves/{shelf}" };
  }
  // 删除书架，包括书架上所有的图书
  rpc DeleteShelf(DeleteShelfRequest) returns (google.protobuf.Empty) {
    //  curl -X DELETE http://domain_name/v1/shelves/2
    option (google.api.http) = {delete:"/v1/shelves/{shelf}" };
  }

  // 返回某个书架上图书的列表
  rpc ListBooks(ListBooksRequest) returns (ListBooksResponse) {
    // curl http://domain_name/v1/shelves/1/books
    option (google.api.http) = {get:"/v1/shelves/{shelf}/books" };
  }
  // 创建一本新的图书
  rpc CreateBook(CreateBookRequest) returns (Book) {
    // 在第一个书架上创建一本图书
    // curl -d '{"author":"foo","title":"bar"}' http://domain_name/v1/shelves/1/books
    option (google.api.http) = {
      post:"/v1/shelves/{shelf}/books"
      body:"book"
    };
  }
  // 返回某本特定的图书
  rpc GetBook(GetBookRequest) returns (Book) {
    //   curl http://domain_name/v1/shelves/2/books/1
    option (google.api.http) = {get:"/v1/shelves/{shelf}/books/{book}" };
  }
  // 从书架上删除一本图书
  rpc DeleteBook(DeleteBookRequest) returns (google.protobuf.Empty) {
    //   curl -X DELETE http://domain_name/v1/shelves/1/books/1
    option (google.api.http) = {delete:"/v1/shelves/{shelf}/books/{book}" };
  }
}


message Shelf {
  int64 id = 1;
  string theme = 2;
  int64 size = 3;
}

message Book {
  int64 id = 1;
  string author = 2;
  string title = 3;
}

message ListShelvesResponse {
  repeated Shelf shelves = 1;
}

message CreateShelfRequest {
  Shelf shelf = 1;
}

message GetShelfRequest {
  // 要检索的书架的ID
  int64 shelf = 1;
}

message DeleteShelfRequest {
  int64 shelf = 1;
}

message ListBooksRequest {
  // 图书的书架id
  int64 shelf = 1;
  string page_token = 2;
}

message ListBooksResponse {
  repeated Book books = 1;
  string next_page = 2;
}

message CreateBookRequest {
  int64 shelf = 1;
  Book book = 2;
}

message GetBookRequest {
  int64 shelf = 1;
  int64 book = 2;
}

message DeleteBookRequest {
  int64 shelf = 1;
  int64 book = 2;
}